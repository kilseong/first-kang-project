24-07-06

//1번 문제

let name = "noona's fruit store"
let fruits = ["banana","apple","mango"]
let address = "Seoul"

let store = {name:name, fruits:fruits, address:address}
//아래와 같이 변수를 선언 할수 있다
//변수명은 선언했던 변수명과 동일해야 된다
// 답:
let store = {name,fruits,address}

//변수가 아래와 같을때 
// let store = {
// name : "noona's fruit store",
// fruits : ["banana","apple","mango"],
//  address : "Seoul"
// }

//let store = {name:name, fruits:fruits, address:address}
//아래와 같이 변수를 선언 할수 있다
//let {name, fruits, address} = store

// console.log(store)

//2번 문제
let store = {name,fruits,address}
console.log(`제 가게 이름은 ${store.name}입니다. 위치는 ${store.address}에 있습니다.`)

//3번 문제

function calculate(obj){ // 함수 안을 바꾸시오
 let {a,b,c} = obj;
 return a+b+c
 // return obj.a+obj.b+obj.c
}

calculate({a:1,b:2,c:3})

//화살표 함수로 변경 해봣음
// let calculate = (obj)=> {
//     let {a,b,c} = obj;
//     return a+b+c
//     }

//calculate({a:1,b:2,c:3})
//console.log(calculate({a:1,b:2,c:3}))

//4번 문제
let name="noona store"
let fruits = ["banana","apple","mango"]
let address={
    country:"Korea",
    city:"Seoul"
}

function findStore(obj){
   let {name,address:{city}} = obj
    return name==="noona store" && city === "Seoul"
}
console.log(findStore({name,fruits,address}))


// 5. 다음과같이 프린트되게 코드를 바꾸시오
function getNumber(){
    let array = [1,2,3,4,5,6]  
    let [first, , third,forth] = array // 여기서부터 바꾸시오
    return {first,third,forth}
}
console.log(getNumber()) //  결과값 { first: 1, third: 3, forth: 4 }


// 6. 다음의 결과가 true가 되게 하시오
function getCalendar(first, ...rest) {
  return (
    first === "January" &&
    rest[0] === "Febuary" &&
    rest[1] === "March" &&
    rest[2] === undefined
  );
}
 console.log(getCalendar("January", "Febuary", "March")); // 여기를 바꾸시오

//(변수명1),…(변수명2) 문법은 나머지 정보를 한 변수에 담는걸 의미한다.
// 따라서 first 변수에 들어갈 "January" 와 rest변수에 들어갈Febuary, March 를 넣어준다

// 7. 두 어레이들중 최소값을 찾는 함수를 완성하시오
function getMinimum(){
    let a= [45,23,78]
    let b = [54,11,9]
    return Math.min(...a, ...b) // 여기를 바꾸시오
}
console.log(getMinimum())

// ES6문법 활용하기전 알고있던 concat을 사용해봣다 => Math.min(a.concat(b))
// min함수에는 매개변수로 배열이 들어올수가 없었다. => 숫자를 넣어줘야한다.
// …을 사용하여 배열의 각요소를 추출하자


// 8. 다음의 함수를 화살표 함수로 바꾸시오

// function sumNumber() {
  // 여기서부터 바꾸시오
  const sum =  (a, b) = a+b
      //function { }--삭제
    //return a + b; -- 값이 하나일때는 바로 남길수 있다

  return sum(40, 10);
}


// 9. 다음함수를 화살표 함수로 바꾸시오
// function sumNumber() {
//   //여기를 바꾸시오
//   return addNumber(1)(2)(3);
//   function addNumber(a) {
//     return function (b) {
//       return function (c) {
//         return a + b + c;
//       };
//     };
//   }
// }
//  console.log(sumNumber());

//답:
function sumNumber() {


  let addNumber = (a)=>(b)=>(c)=>a+b+c
  return addNumber(1)(2)(3);


}

 console.log(sumNumber());

// 참고
// function으로 선언된 일반 함수들은 자바스크립트가 시작됨과 동시에 미리 메모리에 선언되어 기억되어진다(호이스팅개념) 따라서 함수를 선언전에 불러도 무관하다
// Comment
// Suggest edit

// *let 을사용하지않고 addNumber를 입력해도 답이나오더라
// 하지만 이는표준 JavaScript의 규칙을 따르지 않는 것이라고하여 권장하지않는다고한다

Select a repo
Subscribe
